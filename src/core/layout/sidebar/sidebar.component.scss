@import "../../../styles/variables.scss";

:host {
  background: $color-white;
  border-left: 1px solid $color-gray-300;
  overflow-y: auto;
  overflow-x: hidden;
  box-shadow: -2px 0 20px rgba(0, 0, 0, 0.1);
  width: $sidebar-width;
  max-width: $sidebar-width;
  flex-shrink: 0;
  transition: all 0.3s ease;
  padding-top: $header-height;
  
  &.sidebar-collapsed {
    width: 0;
    max-width: 0;
    border-left: none;
    box-shadow: none;
  }
}

.sidebar-content {
  height: 100%;
  display: flex;
  flex-direction: column;
  background: $color-white;
  width: 100%;
  max-width: 100%;
  box-sizing: border-box;
  opacity: 1;
  transform: translateX(0);
  transition: all 0.3s ease;
  
  &.collapsed {
    opacity: 0;
    transform: translateX(-100%);
    pointer-events: none;
  }
}

.sidebar-header {
  padding: $space-xl;
  border-bottom: 1px solid $color-gray-300;
  background: $color-white;
  box-sizing: border-box;
  overflow: hidden;
}

.sidebar-title {
  font-size: $font-size-lg;
  font-weight: $font-weight-semibold;
  background: $gradient-primary;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  margin: 0;
  display: flex;
  align-items: center;
  gap: $space-sm;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  
  i {
    background: $gradient-primary;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    flex-shrink: 0;
  }
}

.menu-container {
  flex: 1;
  padding: $space-lg;
  overflow-y: auto;
  overflow-x: hidden;
  background: $color-white;
  box-sizing: border-box;
}

// PrimeNG component overrides to prevent horizontal overflow and style active items
:host ::ng-deep .p-panelmenu {
  width: 100%;
  max-width: 100%;
  box-sizing: border-box;
  
  .p-panelmenu-header {
    .p-panelmenu-header-content {
      width: 100%;
      max-width: 100%;
      box-sizing: border-box;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      
      // Active state for main menu items
      &:has(.p-panelmenu-item-link-active) {
        background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(118, 75, 162, 0.1) 100%);
        border-left: 3px solid $color-primary;
        
        .p-panelmenu-item-link-active {
          color: $color-primary;
          
          .p-menuitem-icon {
            color: $color-primary;
          }
        }
      }
    }
  }
  
  .p-panelmenu-content {
    width: 100%;
    max-width: 100%;
    box-sizing: border-box;
    
    .p-panelmenu-submenu {
      .p-panelmenu-item {
        .p-panelmenu-item-content {
          width: 100%;
          max-width: 100%;
          box-sizing: border-box;
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
          border-radius: $border-radius-md;
          margin-bottom: $space-xs;
          transition: all 0.2s ease;
          
          &:hover {
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.05) 0%, rgba(118, 75, 162, 0.05) 100%);
            transform: translateX(4px);
          }
          
          // Active state for sub-menu items
          &:has(.p-panelmenu-item-link-active) {
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.15) 0%, rgba(118, 75, 162, 0.15) 100%);
            border-left: 3px solid $color-primary;
            
            .p-panelmenu-item-link-active {
              color: $color-primary;
              font-weight: $font-weight-semibold;
              
              .p-panelmenu-submenu-icon {
                color: $color-primary;
              }
            }
          }
          
          .p-panelmenu-item-link {
            width: 100%;
            max-width: 100%;
            box-sizing: border-box;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            
            &.p-panelmenu-item-link-active {
              color: $color-primary;
              font-weight: $font-weight-semibold;
              
              .p-panelmenu-submenu-icon {
                color: $color-primary;
              }
            }
          }
        }
      }
    }
  }
}

@media (max-width: $breakpoint-md) {
  :host {
    position: fixed;
    top: $header-height;
    left: 0;
    height: calc(100vh - #{$header-height});
    z-index: $z-index-sidebar;
    border-left: none;
    border-right: 1px solid $color-gray-300;
    padding-top: 0;
    
    &.sidebar-collapsed {
      transform: translateX(-100%);
    }
  }
  
  .sidebar-content {
    width: 100%;
    max-width: 100%;
    
    &.collapsed {
      transform: translateX(0);
      opacity: 1;
    }
  }
}

// Dark mode styles
:host-context(.dark-mode) {
  background: $color-dark-surface;
  border-left-color: $color-dark-border;
  
  .sidebar-content {
    background: $color-dark-surface;
  }
  
  .sidebar-header {
    background: $color-dark-surface;
    border-bottom-color: $color-dark-border;
  }
  
  .menu-container {
    background: $color-dark-surface;
  }
  
  // PrimeNG dark mode overrides
  ::ng-deep .p-panelmenu {
    .p-panelmenu-panel {
      background: none;
    }
    
    .p-panelmenu-header {
      .p-panelmenu-header-content {
        background: $color-dark-surface;
        
        .p-panelmenu-item-link {
          color: $color-dark-text;
          
          .p-menuitem-icon {
            color: $color-dark-text-secondary;
          }
        }
        
        .p-panelmenu-header-label,
        .p-panelmenu-header-content .p-panelmenu-header-label,
        .p-panelmenu-item-link .p-panelmenu-header-label {
          color: white !important;
        }
        
        &:hover {
          background: rgba(255, 255, 255, 0.05);
        }
      }
    }
    
    .p-panelmenu-content {
      background: $color-dark-surface;
      
      .p-panelmenu-submenu {
        .p-panelmenu-item {
          .p-panelmenu-item-content {
            .p-panelmenu-item-link {
              color: $color-dark-text-secondary;
              
              .p-panelmenu-submenu-icon {
                color: $color-dark-text-secondary;
              }
            }
            
            &:hover {
              background: rgba(255, 255, 255, 0.05);
            }
          }
        }
      }
    }
  }
  
  @media (max-width: $breakpoint-md) {
    border-right-color: $color-dark-border;
  }
} 